worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
    accept_mutex on;
}
http {
	proxy_cache_path /cache levels=1:2 keys_zone=bosta:10m max_size=10g inactive=60m;
    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # to boost I/O on HDD we can disable access logs
    access_log off;

    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile on;

    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # reduce the data that needs to be sent over network -- for testing environment
    gzip on;
    gzip_min_length 1; # test
    gzip_comp_level 5; # test
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store;
    gzip_types
        application/json

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;


    # if client stop responding, free up memory -- default 60
    send_timeout 2;

    upstream api {
		keepalive 4;
        server api1:3000;
        server api2:3000;
    }
    server {
        listen 9999;
        location / {
            proxy_pass http://api;
			proxy_http_version 1.1;
            proxy_set_header "Connection" "";
			proxy_buffering off;
            proxy_set_header Keep-Alive "";
            proxy_set_header Proxy-Connection "keep-alive";
			proxy_cache bosta;
            proxy_cache_methods GET;
            proxy_cache_valid 400 10m;
        }
    }
}