version: '3.5'
services:
  api1: # API - Instância 01
    image: node:lts-slim
    hostname: api1
    working_dir: /app
    volumes:
      - ./:/app
    command: bash -c "npm start"
    depends_on:
      - db
    expose:
      - "3000"
    ports:
      - 3000:3000
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '175MB'

  api2: # API - Instância 02
    image: node:lts-slim
    hostname: api2
    working_dir: /app
    volumes:
      - ./:/app
    command: bash -c "npm start"
    depends_on:
      - db
    expose:
      - "3000"
    ports:
      - 3001:3001
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '175MB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '100MB'
  db: # Banco de dados
   image: postgres:14.1-alpine
   ports:
    - "5432:5432"
   environment:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_DB: rinhadb
   volumes:
      - ./ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
   command: postgres -c 'max_connections=300'
   deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '100MB'

networks:
  default:
    driver: bridge
    name: rinha